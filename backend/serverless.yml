service:
  name: serverless-todo-app

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
  - serverless-reqvalidator-plugin

provider:
  name: aws
  runtime: nodejs12.x

  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-2'}

  environment:
    TODOS_TABLE: Todos-${self:provider.stage}
    TODOS_ID_INDEX: TodosIdIndex
    CONNECTIONS_TABLE: Connections-${self:provider.stage}
    IMAGES_S3_BUCKET: serverless-udagram-thumbnail-${self:provider.stage}
    AUTH_0_SECRET: S-EbH6siGZrnX_JyfWWS9dSJMGAjjt-48uHeViO-1FDMrmM6M4EtNw72Bld71gDv 
    SIGNED_URL_EXPIRATION: 300

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Scan
        - dynamodb:PutItem
        - dynamodb:GetItem
      Resource: arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.TODOS_TABLE}
        
functions:
  RS256Auth:
    handler: src/lambda/auth/rs256Auth0Authorizer.handler
  GetTodos:
    handler: src/lambda/http/getTodos.handler
    events:
      - http:
          method: get
          authorizer: RS256Auth
          path: todos
          cors: true
  CreateTodo:
    handler: src/lambda/http/createTodo.handler
    events:
      - http:
          method: post
          authorizer: RS256Auth
          path: todos
          cors: true
  UpdateTodo:
    handler: src/lambda/http/updateTodo.handler
    events:
      - http:
          method: patch
          authorizer: RS256Auth
          path: todos/{todoId}
          cors: true
  DeleteTodo:
    handler: src/lambda/http/deleteTodo.handler
    events:
      - http:
          method: delete
          authorizer: RS256Auth
          path: todos/{todoId}
          cors: true
  GenerateUploadUrl:
    handler: src/lambda/http/generateUploadUrl.handler
    events:
      - http:
          method: post
          authorizer: RS256Auth
          path: todos/{todoId}/attachment
          cors: true       

resources:
  Resources:
    TodosDynamoDBTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
         - AttributeName: todoId
           AttributeType: S
        KeySchema:
         - AttributeName: todoId
           KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:provider.environment.TODOS_TABLE}
        
      
        